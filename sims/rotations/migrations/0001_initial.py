# Generated by Django 5.2.1 on 2025-05-30 07:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Hospital",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Official name of the hospital", max_length=200),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="Hospital code or abbreviation",
                        max_length=20,
                        null=True,
                        unique=True,
                    ),
                ),
                ("address", models.TextField(blank=True, help_text="Complete hospital address")),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="Hospital contact phone number", max_length=20
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, help_text="Hospital contact email", max_length=254
                    ),
                ),
                ("website", models.URLField(blank=True, help_text="Hospital website URL")),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of hospital and its specialties"
                    ),
                ),
                (
                    "facilities",
                    models.TextField(blank=True, help_text="Available facilities and equipment"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this hospital is currently accepting rotations",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Hospital",
                "verbose_name_plural": "Hospitals",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="rotations_h_name_685955_idx"),
                    models.Index(fields=["is_active"], name="rotations_h_is_acti_274d00_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(help_text="Name of the department", max_length=200)),
                (
                    "head_of_department",
                    models.CharField(
                        blank=True, help_text="Name of the department head", max_length=200
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True, help_text="Department contact email", max_length=254
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, help_text="Department contact phone", max_length=20
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the department and its services"
                    ),
                ),
                (
                    "training_objectives",
                    models.TextField(
                        blank=True, help_text="Learning objectives for rotations in this department"
                    ),
                ),
                (
                    "required_skills",
                    models.TextField(
                        blank=True, help_text="Skills that should be acquired during rotation"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this department is currently accepting rotations",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "hospital",
                    models.ForeignKey(
                        help_text="Hospital this department belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="departments",
                        to="rotations.hospital",
                    ),
                ),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
                "ordering": ["hospital__name", "name"],
            },
        ),
        migrations.CreateModel(
            name="Rotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("start_date", models.DateField(help_text="Start date of the rotation")),
                ("end_date", models.DateField(help_text="End date of the rotation")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planned", "Planned"),
                            ("ongoing", "Ongoing"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("pending", "Pending Approval"),
                        ],
                        default="planned",
                        help_text="Current status of the rotation",
                        max_length=20,
                    ),
                ),
                (
                    "objectives",
                    models.TextField(
                        blank=True, help_text="Specific learning objectives for this rotation"
                    ),
                ),
                (
                    "learning_outcomes",
                    models.TextField(
                        blank=True, help_text="Expected learning outcomes and competencies"
                    ),
                ),
                (
                    "requirements",
                    models.TextField(
                        blank=True, help_text="Requirements and prerequisites for this rotation"
                    ),
                ),
                (
                    "completion_certificate",
                    models.FileField(
                        blank=True,
                        help_text="Completion certificate for the rotation",
                        null=True,
                        upload_to="rotations/certificates/",
                    ),
                ),
                (
                    "feedback",
                    models.TextField(
                        blank=True, help_text="Overall feedback and comments on the rotation"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Additional notes and observations"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, help_text="Date and time when rotation was approved", null=True
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who approved this rotation",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rotations_approved",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this rotation assignment",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rotations_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        help_text="Department where rotation takes place",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rotations",
                        to="rotations.department",
                    ),
                ),
                (
                    "hospital",
                    models.ForeignKey(
                        help_text="Hospital where rotation takes place",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rotations",
                        to="rotations.hospital",
                    ),
                ),
                (
                    "pg",
                    models.ForeignKey(
                        help_text="Postgraduate assigned to this rotation",
                        limit_choices_to={"role": "pg"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rotations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "supervisor",
                    models.ForeignKey(
                        blank=True,
                        help_text="Supervisor assigned to oversee this rotation",
                        limit_choices_to={"role": "supervisor"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="supervised_rotations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Rotation",
                "verbose_name_plural": "Rotations",
                "ordering": ["-start_date", "pg__last_name"],
            },
        ),
        migrations.CreateModel(
            name="RotationEvaluation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "evaluation_type",
                    models.CharField(
                        choices=[
                            ("mid_rotation", "Mid-Rotation Evaluation"),
                            ("final", "Final Evaluation"),
                            ("peer", "Peer Evaluation"),
                            ("self", "Self Evaluation"),
                            ("supervisor", "Supervisor Evaluation"),
                        ],
                        help_text="Type of evaluation",
                        max_length=20,
                    ),
                ),
                (
                    "score",
                    models.IntegerField(blank=True, help_text="Numerical score (0-100)", null=True),
                ),
                (
                    "comments",
                    models.TextField(blank=True, help_text="Detailed comments and feedback"),
                ),
                (
                    "recommendations",
                    models.TextField(blank=True, help_text="Recommendations for improvement"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("reviewed", "Reviewed"),
                            ("approved", "Approved"),
                        ],
                        default="draft",
                        help_text="Status of the evaluation",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "evaluator",
                    models.ForeignKey(
                        help_text="Person conducting the evaluation",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rotation",
                    models.ForeignKey(
                        help_text="Rotation being evaluated",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations",
                        to="rotations.rotation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rotation Evaluation",
                "verbose_name_plural": "Rotation Evaluations",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="department",
            index=models.Index(fields=["hospital", "name"], name="rotations_d_hospita_f105f8_idx"),
        ),
        migrations.AddIndex(
            model_name="department",
            index=models.Index(fields=["is_active"], name="rotations_d_is_acti_57af4e_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="department",
            unique_together={("hospital", "name")},
        ),
        migrations.AddIndex(
            model_name="rotation",
            index=models.Index(fields=["pg", "status"], name="rotations_r_pg_id_e564ea_idx"),
        ),
        migrations.AddIndex(
            model_name="rotation",
            index=models.Index(
                fields=["supervisor", "status"], name="rotations_r_supervi_6755e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rotation",
            index=models.Index(
                fields=["start_date", "end_date"], name="rotations_r_start_d_b061f7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rotation",
            index=models.Index(fields=["status"], name="rotations_r_status_1e8b39_idx"),
        ),
        migrations.AddIndex(
            model_name="rotation",
            index=models.Index(fields=["department"], name="rotations_r_departm_e4af7a_idx"),
        ),
        migrations.AddIndex(
            model_name="rotation",
            index=models.Index(fields=["hospital"], name="rotations_r_hospita_4571f1_idx"),
        ),
        migrations.AddConstraint(
            model_name="rotation",
            constraint=models.CheckConstraint(
                check=models.Q(("end_date__gt", models.F("start_date"))),
                name="rotation_end_after_start",
            ),
        ),
        migrations.AddIndex(
            model_name="rotationevaluation",
            index=models.Index(
                fields=["rotation", "evaluation_type"], name="rotations_r_rotatio_27e430_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rotationevaluation",
            index=models.Index(fields=["evaluator"], name="rotations_r_evaluat_c401aa_idx"),
        ),
        migrations.AddIndex(
            model_name="rotationevaluation",
            index=models.Index(fields=["status"], name="rotations_r_status_9e9105_idx"),
        ),
        migrations.AddIndex(
            model_name="rotationevaluation",
            index=models.Index(fields=["created_at"], name="rotations_r_created_a4ace7_idx"),
        ),
        migrations.AddConstraint(
            model_name="rotationevaluation",
            constraint=models.CheckConstraint(
                check=models.Q(("score__gte", 0), ("score__lte", 100)),
                name="evaluation_score_range",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rotationevaluation",
            unique_together={("rotation", "evaluator", "evaluation_type")},
        ),
    ]

# Generated by Django 4.2.25 on 2025-10-10 22:31

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalUser",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_index=True,
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("supervisor", "Supervisor"),
                            ("pg", "Postgraduate"),
                        ],
                        help_text="User role determines access permissions in SIMS",
                        max_length=20,
                    ),
                ),
                (
                    "specialty",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("medicine", "Internal Medicine"),
                            ("surgery", "Surgery"),
                            ("pediatrics", "Pediatrics"),
                            ("gynecology", "Gynecology & Obstetrics"),
                            ("orthopedics", "Orthopedics"),
                            ("cardiology", "Cardiology"),
                            ("neurology", "Neurology"),
                            ("psychiatry", "Psychiatry"),
                            ("dermatology", "Dermatology"),
                            ("radiology", "Radiology"),
                            ("anesthesia", "Anesthesia"),
                            ("pathology", "Pathology"),
                            ("microbiology", "Microbiology"),
                            ("pharmacology", "Pharmacology"),
                            ("community_medicine", "Community Medicine"),
                            ("forensic_medicine", "Forensic Medicine"),
                            ("other", "Other"),
                        ],
                        help_text="Medical specialty (required for PGs and Supervisors)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "year",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Year 1"),
                            ("2", "Year 2"),
                            ("3", "Year 3"),
                            ("4", "Year 4"),
                        ],
                        help_text="Training year (required for PGs)",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        blank=True,
                        help_text="Medical council registration number",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Contact phone number",
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP address of last login", null=True
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(
                        default=False, help_text="Mark as archived instead of deleting"
                    ),
                ),
                (
                    "archived_date",
                    models.DateTimeField(
                        blank=True, help_text="Date when user was archived", null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Admin who created this user account",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Last admin to modify this user account",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "supervisor",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Assigned supervisor (required for PGs)",
                        limit_choices_to={"role": "supervisor"},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical SIMS User",
                "verbose_name_plural": "historical SIMS Users",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]

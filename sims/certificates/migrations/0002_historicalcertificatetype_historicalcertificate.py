# Generated by Django 4.2.25 on 2025-10-10 22:31

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("certificates", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalCertificateType",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Name of the certificate type",
                        max_length=200,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("academic", "Academic Qualification"),
                            ("professional", "Professional Certification"),
                            ("cme", "Continuing Medical Education"),
                            ("cpd", "Continuing Professional Development"),
                            ("specialty", "Specialty Training"),
                            ("safety", "Safety & Compliance"),
                            ("skills", "Skills & Competency"),
                            ("other", "Other"),
                        ],
                        default="other",
                        help_text="Category this certificate type belongs to",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of this certificate type",
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this certificate is required for all PGs",
                    ),
                ),
                (
                    "validity_period_months",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="How many months this certificate is valid for (leave blank if no expiry)",
                        null=True,
                    ),
                ),
                (
                    "cme_points",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="CME points typically awarded for this certificate type",
                    ),
                ),
                (
                    "cpd_credits",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="CPD credits typically awarded for this certificate type",
                    ),
                ),
                (
                    "prerequisites",
                    models.TextField(
                        blank=True,
                        help_text="Prerequisites or requirements for obtaining this certificate",
                    ),
                ),
                (
                    "requirements",
                    models.TextField(
                        blank=True,
                        help_text="Specific requirements for this certificate type",
                    ),
                ),
                (
                    "verification_guidelines",
                    models.TextField(
                        blank=True,
                        help_text="Guidelines for verifying certificates of this type",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this certificate type is currently active",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Certificate Type",
                "verbose_name_plural": "historical Certificate Types",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCertificate",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Full title of the certificate", max_length=300
                    ),
                ),
                (
                    "certificate_number",
                    models.CharField(
                        blank=True,
                        help_text="Official certificate number or ID",
                        max_length=100,
                    ),
                ),
                (
                    "issuing_organization",
                    models.CharField(
                        help_text="Organization that issued the certificate",
                        max_length=300,
                    ),
                ),
                (
                    "issue_date",
                    models.DateField(help_text="Date when the certificate was issued"),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when the certificate expires (if applicable)",
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the certificate content and training",
                    ),
                ),
                (
                    "skills_acquired",
                    models.TextField(
                        blank=True,
                        help_text="Skills and competencies acquired through this certificate",
                    ),
                ),
                (
                    "cme_points_earned",
                    models.PositiveIntegerField(
                        default=0, help_text="CME points earned for this certificate"
                    ),
                ),
                (
                    "cpd_credits_earned",
                    models.PositiveIntegerField(
                        default=0, help_text="CPD credits earned for this certificate"
                    ),
                ),
                (
                    "certificate_file",
                    models.TextField(
                        help_text="Upload the certificate document (PDF, JPG, PNG)",
                        max_length=100,
                    ),
                ),
                (
                    "additional_documents",
                    models.TextField(
                        blank=True,
                        help_text="Additional supporting documents",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "verification_url",
                    models.URLField(
                        blank=True,
                        help_text="URL for online verification of this certificate",
                    ),
                ),
                (
                    "verification_code",
                    models.CharField(
                        blank=True,
                        help_text="Verification code for this certificate",
                        max_length=100,
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this certificate has been verified",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                            ("under_review", "Under Review"),
                        ],
                        default="pending",
                        help_text="Current status of the certificate",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "verified_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when certificate was verified",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "certificate_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Type of certificate",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="certificates.certificatetype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="User who uploaded this certificate",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pg",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Postgraduate who earned this certificate",
                        limit_choices_to={"role": "pg"},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="User who verified this certificate",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Certificate",
                "verbose_name_plural": "historical Certificates",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]

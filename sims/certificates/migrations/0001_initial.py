# Generated by Django 5.2.1 on 2025-05-30 07:12

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import sims.certificates.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CertificateStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("total_certificates", models.PositiveIntegerField(default=0)),
                ("approved_certificates", models.PositiveIntegerField(default=0)),
                ("pending_certificates", models.PositiveIntegerField(default=0)),
                ("expired_certificates", models.PositiveIntegerField(default=0)),
                ("total_cme_points", models.PositiveIntegerField(default=0)),
                ("total_cpd_credits", models.PositiveIntegerField(default=0)),
                ("last_certificate_date", models.DateField(blank=True, null=True)),
                ("compliance_rate", models.FloatField(default=0.0)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "pg",
                    models.OneToOneField(
                        limit_choices_to={"role": "pg"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificate_stats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Certificate Statistics",
                "verbose_name_plural": "Certificate Statistics",
            },
        ),
        migrations.CreateModel(
            name="CertificateType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the certificate type", max_length=200, unique=True
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("academic", "Academic Qualification"),
                            ("professional", "Professional Certification"),
                            ("cme", "Continuing Medical Education"),
                            ("cpd", "Continuing Professional Development"),
                            ("specialty", "Specialty Training"),
                            ("safety", "Safety & Compliance"),
                            ("skills", "Skills & Competency"),
                            ("other", "Other"),
                        ],
                        default="other",
                        help_text="Category this certificate type belongs to",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed description of this certificate type"
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=False, help_text="Whether this certificate is required for all PGs"
                    ),
                ),
                (
                    "validity_period_months",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="How many months this certificate is valid for (leave blank if no expiry)",
                        null=True,
                    ),
                ),
                (
                    "cme_points",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="CME points typically awarded for this certificate type",
                    ),
                ),
                (
                    "cpd_credits",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="CPD credits typically awarded for this certificate type",
                    ),
                ),
                (
                    "prerequisites",
                    models.TextField(
                        blank=True,
                        help_text="Prerequisites or requirements for obtaining this certificate",
                    ),
                ),
                (
                    "requirements",
                    models.TextField(
                        blank=True, help_text="Specific requirements for this certificate type"
                    ),
                ),
                (
                    "verification_guidelines",
                    models.TextField(
                        blank=True, help_text="Guidelines for verifying certificates of this type"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this certificate type is currently active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Certificate Type",
                "verbose_name_plural": "Certificate Types",
                "ordering": ["category", "name"],
                "indexes": [
                    models.Index(fields=["category"], name="certificate_categor_126b19_idx"),
                    models.Index(fields=["is_required"], name="certificate_is_requ_78c29f_idx"),
                    models.Index(fields=["is_active"], name="certificate_is_acti_e9611d_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Full title of the certificate", max_length=300),
                ),
                (
                    "certificate_number",
                    models.CharField(
                        blank=True, help_text="Official certificate number or ID", max_length=100
                    ),
                ),
                (
                    "issuing_organization",
                    models.CharField(
                        help_text="Organization that issued the certificate", max_length=300
                    ),
                ),
                ("issue_date", models.DateField(help_text="Date when the certificate was issued")),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when the certificate expires (if applicable)",
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the certificate content and training"
                    ),
                ),
                (
                    "skills_acquired",
                    models.TextField(
                        blank=True,
                        help_text="Skills and competencies acquired through this certificate",
                    ),
                ),
                (
                    "cme_points_earned",
                    models.PositiveIntegerField(
                        default=0, help_text="CME points earned for this certificate"
                    ),
                ),
                (
                    "cpd_credits_earned",
                    models.PositiveIntegerField(
                        default=0, help_text="CPD credits earned for this certificate"
                    ),
                ),
                (
                    "certificate_file",
                    models.FileField(
                        help_text="Upload the certificate document (PDF, JPG, PNG)",
                        upload_to=sims.certificates.models.certificate_upload_path,
                    ),
                ),
                (
                    "additional_documents",
                    models.FileField(
                        blank=True,
                        help_text="Additional supporting documents",
                        null=True,
                        upload_to=sims.certificates.models.additional_documents_upload_path,
                    ),
                ),
                (
                    "verification_url",
                    models.URLField(
                        blank=True, help_text="URL for online verification of this certificate"
                    ),
                ),
                (
                    "verification_code",
                    models.CharField(
                        blank=True,
                        help_text="Verification code for this certificate",
                        max_length=100,
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False, help_text="Whether this certificate has been verified"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                            ("under_review", "Under Review"),
                        ],
                        default="pending",
                        help_text="Current status of the certificate",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "verified_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when certificate was verified",
                        null=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who uploaded this certificate",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="certificates_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pg",
                    models.ForeignKey(
                        help_text="Postgraduate who earned this certificate",
                        limit_choices_to={"role": "pg"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who verified this certificate",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="certificates_verified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "certificate_type",
                    models.ForeignKey(
                        help_text="Type of certificate",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificates",
                        to="certificates.certificatetype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Certificate",
                "verbose_name_plural": "Certificates",
                "ordering": ["-created_at", "pg__last_name"],
            },
        ),
        migrations.CreateModel(
            name="CertificateReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("needs_clarification", "Needs Clarification"),
                        ],
                        default="pending",
                        help_text="Review status",
                        max_length=20,
                    ),
                ),
                ("comments", models.TextField(blank=True, help_text="Detailed review comments")),
                (
                    "recommendations",
                    models.TextField(
                        blank=True, help_text="Recommendations for improvement or next steps"
                    ),
                ),
                (
                    "required_changes",
                    models.TextField(
                        blank=True, help_text="Specific changes required before approval"
                    ),
                ),
                (
                    "review_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        help_text="Date when the review was conducted",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "certificate",
                    models.ForeignKey(
                        help_text="Certificate being reviewed",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="certificates.certificate",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        help_text="Person conducting the review",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificate_reviews_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Certificate Review",
                "verbose_name_plural": "Certificate Reviews",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["certificate", "status"], name="certificate_certifi_d99967_idx"
                    ),
                    models.Index(fields=["reviewer"], name="certificate_reviewe_f70c6d_idx"),
                    models.Index(fields=["review_date"], name="certificate_review__46996d_idx"),
                    models.Index(fields=["created_at"], name="certificate_created_7c8fb9_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="certificate",
            index=models.Index(fields=["pg", "status"], name="certificate_pg_id_8c0364_idx"),
        ),
        migrations.AddIndex(
            model_name="certificate",
            index=models.Index(
                fields=["certificate_type", "status"], name="certificate_certifi_595140_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="certificate",
            index=models.Index(fields=["issue_date"], name="certificate_issue_d_e50978_idx"),
        ),
        migrations.AddIndex(
            model_name="certificate",
            index=models.Index(fields=["expiry_date"], name="certificate_expiry__2f5bd0_idx"),
        ),
        migrations.AddIndex(
            model_name="certificate",
            index=models.Index(fields=["status"], name="certificate_status_31e804_idx"),
        ),
        migrations.AddIndex(
            model_name="certificate",
            index=models.Index(fields=["is_verified"], name="certificate_is_veri_53e18d_idx"),
        ),
        migrations.AddIndex(
            model_name="certificate",
            index=models.Index(
                fields=["issuing_organization"], name="certificate_issuing_bdd5c9_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="certificate",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("expiry_date__isnull", True),
                    ("expiry_date__gt", models.F("issue_date")),
                    _connector="OR",
                ),
                name="certificate_expiry_after_issue",
            ),
        ),
    ]

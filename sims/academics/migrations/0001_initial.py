# Generated by Django 4.2.25 on 2025-10-23 01:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Department name", max_length=200, unique=True),
                ),
                ("code", models.CharField(help_text="Department code", max_length=20, unique=True)),
                ("description", models.TextField(blank=True, help_text="Department description")),
                ("active", models.BooleanField(default=True, help_text="Is department active?")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "head",
                    models.ForeignKey(
                        blank=True,
                        help_text="Department head",
                        limit_choices_to={"role__in": ["admin", "supervisor"]},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="headed_departments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Batch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Batch name (e.g., 2024 Batch)", max_length=100),
                ),
                (
                    "program",
                    models.CharField(
                        choices=[
                            ("mbbs", "MBBS"),
                            ("md", "MD"),
                            ("ms", "MS"),
                            ("dm", "DM"),
                            ("mch", "MCh"),
                            ("diploma", "Diploma"),
                            ("fellowship", "Fellowship"),
                        ],
                        help_text="Academic program",
                        max_length=50,
                    ),
                ),
                ("start_date", models.DateField(help_text="Batch start date")),
                ("end_date", models.DateField(help_text="Expected batch end date")),
                (
                    "capacity",
                    models.IntegerField(
                        default=50,
                        help_text="Maximum students in batch",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("active", models.BooleanField(default=True, help_text="Is batch active?")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "coordinator",
                    models.ForeignKey(
                        blank=True,
                        help_text="Batch coordinator",
                        limit_choices_to={"role__in": ["admin", "supervisor"]},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="coordinated_batches",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        help_text="Department for this batch",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="batches",
                        to="academics.department",
                    ),
                ),
            ],
            options={
                "verbose_name": "Batch",
                "verbose_name_plural": "Batches",
                "ordering": ["-start_date", "name"],
            },
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "roll_number",
                    models.CharField(
                        help_text="Student roll/registration number", max_length=50, unique=True
                    ),
                ),
                ("admission_date", models.DateField(help_text="Date of admission")),
                (
                    "expected_graduation_date",
                    models.DateField(blank=True, help_text="Expected graduation date", null=True),
                ),
                (
                    "actual_graduation_date",
                    models.DateField(blank=True, help_text="Actual graduation date", null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("admitted", "Admitted"),
                            ("enrolled", "Enrolled"),
                            ("active", "Active"),
                            ("on_leave", "On Leave"),
                            ("suspended", "Suspended"),
                            ("withdrawn", "Withdrawn"),
                            ("graduated", "Graduated"),
                            ("expelled", "Expelled"),
                        ],
                        default="admitted",
                        help_text="Current enrollment status",
                        max_length=20,
                    ),
                ),
                (
                    "status_updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Last status change date"
                    ),
                ),
                (
                    "cgpa",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cumulative GPA",
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                (
                    "previous_institution",
                    models.CharField(blank=True, help_text="Previous institution", max_length=200),
                ),
                (
                    "previous_qualification",
                    models.CharField(
                        blank=True, help_text="Previous qualification", max_length=100
                    ),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(
                        blank=True, help_text="Emergency contact person name", max_length=200
                    ),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(
                        blank=True, help_text="Emergency contact phone", max_length=20
                    ),
                ),
                (
                    "emergency_contact_relation",
                    models.CharField(
                        blank=True, help_text="Relationship to student", max_length=50
                    ),
                ),
                ("remarks", models.TextField(blank=True, help_text="Additional remarks")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "batch",
                    models.ForeignKey(
                        help_text="Student's batch",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="student_profiles",
                        to="academics.batch",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="Linked user account",
                        limit_choices_to={"role": "pg"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Student Profile",
                "verbose_name_plural": "Student Profiles",
                "ordering": ["roll_number"],
                "indexes": [
                    models.Index(fields=["roll_number"], name="academics_s_roll_nu_ebdcb9_idx"),
                    models.Index(fields=["status"], name="academics_s_status_9f57db_idx"),
                    models.Index(fields=["batch"], name="academics_s_batch_i_0549b2_idx"),
                    models.Index(fields=["admission_date"], name="academics_s_admissi_8121ce_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="department",
            index=models.Index(fields=["code"], name="academics_d_code_791f98_idx"),
        ),
        migrations.AddIndex(
            model_name="department",
            index=models.Index(fields=["active"], name="academics_d_active_9cf6ed_idx"),
        ),
        migrations.AddIndex(
            model_name="batch",
            index=models.Index(fields=["program"], name="academics_b_program_d576e5_idx"),
        ),
        migrations.AddIndex(
            model_name="batch",
            index=models.Index(
                fields=["start_date", "end_date"], name="academics_b_start_d_675282_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="batch",
            index=models.Index(fields=["active"], name="academics_b_active_3c7e78_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="batch",
            unique_together={("name", "department", "start_date")},
        ),
    ]

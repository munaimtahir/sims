# Generated by Django 4.2.25 on 2025-10-22 23:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("rotations", "0002_historicalrotation_historicalhospital_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("title", models.CharField(help_text="Title of the session", max_length=200)),
                (
                    "session_type",
                    models.CharField(
                        choices=[
                            ("lecture", "Lecture"),
                            ("clinical", "Clinical Rotation"),
                            ("tutorial", "Tutorial"),
                            ("seminar", "Seminar"),
                            ("workshop", "Workshop"),
                            ("practical", "Practical Session"),
                        ],
                        default="lecture",
                        help_text="Type of session",
                        max_length=20,
                    ),
                ),
                ("date", models.DateField(help_text="Date of the session")),
                ("start_time", models.TimeField(help_text="Start time of the session")),
                ("end_time", models.TimeField(help_text="End time of the session")),
                (
                    "module_name",
                    models.CharField(
                        blank=True,
                        help_text="Module or course name (if not rotation-based)",
                        max_length=200,
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, help_text="Location of the session", max_length=200
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("ongoing", "Ongoing"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="scheduled",
                        help_text="Current status of the session",
                        max_length=20,
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Additional notes about the session"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "instructor",
                    models.ForeignKey(
                        blank=True,
                        help_text="Instructor or facilitator",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="taught_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rotation",
                    models.ForeignKey(
                        blank=True,
                        help_text="Associated rotation (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sessions",
                        to="rotations.rotation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attendance Session",
                "verbose_name_plural": "Attendance Sessions",
                "ordering": ["-date", "-start_time"],
            },
        ),
        migrations.CreateModel(
            name="EligibilitySummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "period",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("semester", "Semester"),
                            ("yearly", "Yearly"),
                        ],
                        help_text="Time period for this summary",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField(help_text="Start date of the period")),
                ("end_date", models.DateField(help_text="End date of the period")),
                (
                    "total_sessions",
                    models.IntegerField(
                        default=0, help_text="Total number of sessions in this period"
                    ),
                ),
                (
                    "attended_sessions",
                    models.IntegerField(
                        default=0, help_text="Number of sessions attended (present or late)"
                    ),
                ),
                (
                    "percentage_present",
                    models.FloatField(
                        default=0.0,
                        help_text="Percentage of sessions attended",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                (
                    "is_eligible",
                    models.BooleanField(
                        default=False, help_text="Whether user meets eligibility threshold"
                    ),
                ),
                (
                    "threshold_percentage",
                    models.FloatField(
                        default=75.0,
                        help_text="Threshold percentage for eligibility (default 75%)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                ("remarks", models.TextField(blank=True, help_text="Additional remarks")),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User (PG) this summary is for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="eligibility_summaries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Eligibility Summary",
                "verbose_name_plural": "Eligibility Summaries",
                "ordering": ["-start_date", "user__last_name"],
            },
        ),
        migrations.CreateModel(
            name="AttendanceRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("present", "Present"),
                            ("absent", "Absent"),
                            ("late", "Late"),
                            ("excused", "Excused Absence"),
                        ],
                        default="present",
                        help_text="Attendance status",
                        max_length=20,
                    ),
                ),
                (
                    "check_in_time",
                    models.DateTimeField(blank=True, help_text="Time user checked in", null=True),
                ),
                ("remarks", models.TextField(blank=True, help_text="Additional remarks or notes")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "recorded_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who recorded this attendance",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recorded_attendance",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        help_text="Session this record is for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_records",
                        to="attendance.session",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User (PG) this record belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Attendance Record",
                "verbose_name_plural": "Attendance Records",
                "ordering": ["-session__date", "user__last_name"],
            },
        ),
        migrations.AddIndex(
            model_name="session",
            index=models.Index(fields=["date", "status"], name="attendance__date_ed3ec5_idx"),
        ),
        migrations.AddIndex(
            model_name="session",
            index=models.Index(fields=["rotation"], name="attendance__rotatio_170bac_idx"),
        ),
        migrations.AddIndex(
            model_name="eligibilitysummary",
            index=models.Index(fields=["user", "period"], name="attendance__user_id_23bcff_idx"),
        ),
        migrations.AddIndex(
            model_name="eligibilitysummary",
            index=models.Index(
                fields=["start_date", "end_date"], name="attendance__start_d_e4d9ec_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eligibilitysummary",
            index=models.Index(fields=["is_eligible"], name="attendance__is_elig_006ebc_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="eligibilitysummary",
            unique_together={("user", "period", "start_date", "end_date")},
        ),
        migrations.AddIndex(
            model_name="attendancerecord",
            index=models.Index(fields=["user", "status"], name="attendance__user_id_ca18f0_idx"),
        ),
        migrations.AddIndex(
            model_name="attendancerecord",
            index=models.Index(fields=["session", "status"], name="attendance__session_8dae34_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="attendancerecord",
            unique_together={("user", "session")},
        ),
    ]

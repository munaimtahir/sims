name: Django Test Suite with Coverage

on:
  push:
    branches:
      - main
      - 'copilot/**'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: django-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    name: Lint and test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    env:
      DJANGO_SETTINGS_MODULE: sims_project.settings

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install black flake8 pytest pytest-django pytest-cov beautifulsoup4 factory-boy faker

      - name: Prepare Django environment
        run: |
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput

      - name: Check code formatting with Black
        run: |
          black --check sims/ --line-length 100

      - name: Lint with flake8
        run: |
          flake8 sims/ --count --statistics

      - name: Run Django check
        run: |
          python manage.py check

      - name: Run tests with coverage
        run: |
          pytest --cov=sims --cov-report=html --cov-report=term-missing --cov-report=xml --maxfail=5 -v

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

      - name: Upload coverage HTML report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: htmlcov/
          if-no-files-found: ignore

      - name: Upload pytest artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-failures-${{ matrix.python-version }}
          path: .pytest_cache
          if-no-files-found: ignore
